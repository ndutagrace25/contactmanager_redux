{"version":3,"sources":["reducers/contactReducer.js","reducers/index.js","actions/types.js","store.js","components/contacts/Contact.js","actions/contactActions.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","contacts","contact","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","filter","id","concat","toConsumableArray","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","f","Contact","showContactInfo","onDeleteClick","_this","props","deleteContact","this","_this2","_this$props$contact","name","email","phone","react_default","a","createElement","className","onClick","setState","style","cursor","float","color","bind","react_router_dom","to","marginRight","Component","connect","dispatch","axios","delete","then","Contacts","getContacts","nextProps","Fragment","contacts_Contact","key","get","res","data","TextInputGroup","_ref","label","value","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","post","EditContact","updContact","match","params","updateContact","getContact","_nextProps$contact","put","Header","branding","href","About","NotFound","App","react_redux_es","layout_Header","react_router","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6083fe3c.chunk.js","sourcesContent":["import {\r\n    GET_CONTACTS,\r\n    DELETE_CONTACT,\r\n    ADD_CONTACT,\r\n    GET_CONTACT,\r\n    UPDATE_CONTACT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    contacts: [],\r\n    contact: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload\r\n            }\r\n            case DELETE_CONTACT:\r\n                return {\r\n                    ...state,\r\n                    contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n                }\r\n                case ADD_CONTACT:\r\n                    return {\r\n                        ...state,\r\n                        contacts: [action.payload, ...state.contacts]\r\n                    }\r\n\r\n                case GET_CONTACT:\r\n                    return {\r\n                        ...state,\r\n                        contact: action.payload\r\n                    }\r\n\r\n                case UPDATE_CONTACT:\r\n                    return {\r\n                        ...state,\r\n                        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload): contact)\r\n                    }\r\n                    default:\r\n                        return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport contactReducer from './contactReducer';\r\n\r\nexport default combineReducers({\r\n    contact: contactReducer\r\n});","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';","import {\r\n    createStore,\r\n    applyMiddleware,\r\n    compose\r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), \r\n    window.__REDUX_DEVTOOLS_EXTENSION__  ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : f=>f));\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {deleteContact} from '../../actions/contactActions';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  componentDidMount(){\n      this.onDeleteClick();\n  }\n\n  onDeleteClick = id => {\n    //// DELETE CONTACT ////\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{' '}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem'\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired\n};\n\n\nexport default connect( null, {deleteContact})(Contact);\n","import {\r\n    GET_CONTACTS,\r\n    DELETE_CONTACT,\r\n    ADD_CONTACT,\r\n    GET_CONTACT,\r\n    UPDATE_CONTACT\r\n} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getContacts = () => dispatch => {\r\n    axios\r\n        .get(`https://jsonplaceholder.typicode.com/users`)\r\n        .then(res => {\r\n            // console.log(res.data);\r\n            dispatch({\r\n                type: GET_CONTACTS,\r\n                payload: res.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const getContact = (id) => dispatch => {\r\n    axios\r\n        .get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_CONTACT,\r\n                payload: res.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteContact = (id) => dispatch => {\r\n    axios\r\n        .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        .then(() => {\r\n            dispatch({\r\n                type: DELETE_CONTACT,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n}\r\n\r\nexport const addContact = (contact) => dispatch => {\r\n    axios\r\n        .post(`https://jsonplaceholder.typicode.com/users`, contact)\r\n        .then(res => {\r\n            dispatch({\r\n                type: ADD_CONTACT,\r\n                payload: res.data\r\n            })\r\n        })\r\n}\r\n\r\nexport const updateContact = (contact) => dispatch => {\r\n    axios\r\n        .put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact)\r\n        .then(res => {\r\n            dispatch({\r\n                type: UPDATE_CONTACT,\r\n                payload: res.data\r\n            })\r\n        })\r\n\r\n}","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getContacts} from '../../actions/contactActions';\n\nclass Contacts extends Component {\n\n    state = {\n        contacts: []\n    }\n\n    componentDidMount(){\n        this.props.getContacts();\n    }\n\n    componentWillReceiveProps(nextProps){\n        if(nextProps.contacts){\n            this.setState({\n                contacts: nextProps.contacts\n            })\n        }\n    }\n\n  render() {\n    const { contacts } = this.state;\n    // console.log(contacts);\n    return ( \n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-danger\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    getContacts: PropTypes.func.isRequired\n}\n\nconst mapStateToProp = (state) => ({\n    contacts: state.contact.contacts\n})\n\nexport default connect(mapStateToProp, {getContacts})(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport {addContact} from '../../actions/contactActions';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = (e) => {\n\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact ={\n      name,\n      email,\n      phone\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\" \n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n    addContact: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addContact})(AddContact);\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport {getContact, updateContact} from '../../actions/contactActions'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  componentDidMount () {\n      const {id} = this.props.match.params;\n      this.props.getContact(id);\n  }\n\n  componentWillReceiveProps(nextProps){\n      const {name, email, phone} = nextProps.contact;\n        if(nextProps.contact){\n            this.setState({\n                name,\n                email,\n                phone,\n            })\n        }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n   \n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n        id,\n        name,\n        email,\n        phone\n      };\n\n    //// UPDATE CONTACT ////\n    this.props.updateContact(updContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-light btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n    getContact: PropTypes.func.isRequired,\n    contact: PropTypes.object.isRequired,\n    updateContact: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    contact: state.contact.contact\n})\n\nexport default connect(mapStateToProps, {getContact, updateContact})(EditContact);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport store from './store';\nimport {Provider} from 'react-redux'\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <Provider store ={store}>\n            <Router>\n                <div className=\"App\">\n                <Header branding=\"Contact Manager\" />\n                <div className=\"container\">\n                    <Switch>\n                    <Route exact path=\"/\" component={Contacts} />\n                    <Route exact path=\"/contact/add\" component={AddContact} />\n                    <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                    <Route exact path=\"/about\" component={About} />\n                    <Route component={NotFound} />\n                    </Switch>\n                </div>\n                </div>\n            </Router>\n        </Provider>\n      \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}